type User {
  id: ID! @id
  username: String! @unique
  email: String! @unique
  password: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  flashcards: [Flashcard!]!
    @relation(name: "FlashcardOfUser", onDelete: CASCADE)
  decks: [Deck!]! @relation(name: "DeckOfUser", onDelete: CASCADE)
}

type Flashcard {
  id: ID! @id
  hanzi: Hanzi! @relation(name: "HanziAsFlashcard")
  user: User! @relation(name: "FlashcardOfUser")
  comfortLevel: Int!
  decks: [Deck!]! @relation(name: "FlashcardInDeck")
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type Deck {
  id: ID! @id
  name: String!
  description: String
  flashcards: [Flashcard!]! @relation(name: "FlashcardInDeck")
  creator: User! @relation(name: "DeckOfUser")
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type Hanzi {
  id: ID! @id
  traditional: String!
  simplified: String!
  referencedTraditional: String
  referencedSimplified: String
  pinyinNumeric: String
  pinyinDiacritic: String
  definitions: String!
  definitionsDiacritic: String
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  flashcards: [Flashcard!]! @relation(name: "HanziAsFlashcard")
}
